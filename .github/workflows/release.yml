name: Release

on:
  push:
    tags:
      - 'jgrpp-ya-[0-9]+.[0-9]+.[0-9]+\+[0-9]+'
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build (for Pull Requests, use refs/pull/NNN/head)'
        required: true
#  repository_dispatch:
#    # client_payload should be the same as the inputs for workflow_dispatch.
#    types:
#    - Build*
#  release:
#    types:
#    - published

jobs:
  source:
    name: Source

    uses: ./.github/workflows/release-source.yml
    secrets: inherit

  docs:
    name: Docs
    needs: source

    uses: ./.github/workflows/release-docs.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}

  linux:
    name: Linux (Generic)
    needs: source

    uses: ./.github/workflows/release-linux.yml
    secrets: inherit

    with:
      survey_key: ${{ needs.source.outputs.survey_key }}

  linux_distros:
    name: Linux (Distros)
    needs: source

    uses: ./.github/workflows/release-linux-distros.yml
    secrets: inherit

    with:
      survey_key: ${{ needs.source.outputs.survey_key }}

  macos:
    name: MacOS
    needs: source

    uses: ./.github/workflows/release-macos.yml
    secrets: inherit

    with:
      survey_key: ${{ needs.source.outputs.survey_key }}

  windows:
    name: Windows
    needs: source

    uses: ./.github/workflows/release-windows.yml
    secrets: inherit

    with:
      is_tag: ${{ needs.source.outputs.is_tag }}
      survey_key: ${{ needs.source.outputs.survey_key }}

  upload-gh-rel:
    name: Upload (GitHub Release)
    needs:
      - source
      - linux
      - linux-distro
      - macos
      - windows
    if: always() && (github.event_name == 'release' || github.event_name == 'push') && needs.linux.result == 'success' && (needs.linux-distro.result == 'success' || needs.linux-distro.result == 'skipped') && needs.macos.result == 'success' && needs.windows.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Download all bundles
        uses: actions/download-artifact@v2

      - name: Prepair files for Release
        run: |
          echo "::group::Rip some files & Move bundles to a single folder"
          rm -rf openttd-docs
          rm -rf openttd-source
          rm openttd-macos-universal/openttd-${{ needs.source.outputs.version }}-*.zip
          mkdir bundles
          mv openttd-*/* bundles/
          echo "::endgroup::"

      - name: Upload bundles to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: bundles/openttd-*
